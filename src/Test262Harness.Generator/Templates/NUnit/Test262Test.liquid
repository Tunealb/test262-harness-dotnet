//----------------------
// <auto-generated>
//   Generated using the Test262Harness v{{ Version }}
//   GitHub SHA: {{ GitSha }}
//   Template SHA: {{ TemplateSha }}
//   Command line:  {{ CommandLine }}
//   Settings file: {{ SettingsFile }}
// </auto-generated>
//----------------------

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework.Internal;
using Test262Harness;

namespace {{ Namespace }};

// this partial needs to be handled on consuming code side
public static partial class State
{
    public static Test262Stream Test262Stream { get; set; }
}

[Timeout(20_000)]
{% if Parallel -%}
[Parallelizable(ParallelScope.All)]
{% endif -%}
public abstract partial class Test262Test
{
    protected void RunTestCode(Test262File testCase)
    {
        var executor = BuildTestExecutor(testCase);

        string lastError = null;
        try
        {
            ExecuteTest(executor, testCase);
        }
        catch (Exception e)
        {
            lastError = e.ToString();
        }

        if (!testCase.Negative && !string.IsNullOrWhiteSpace(lastError))
        {
            // create friendly formatted code as we have different line numbers compared to original file having comments etc
            var code = string.Join(Environment.NewLine, testCase.Program.Split('\n').Select((x, i) => $"{i + 1:00}: {x}"));
            var message = $"{Environment.NewLine}{testCase.FileName}{Environment.NewLine}{Environment.NewLine}{lastError}{Environment.NewLine}{code}";
            throw new NUnitException(message);
        }
    }
}
